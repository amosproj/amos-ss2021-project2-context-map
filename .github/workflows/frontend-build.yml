name: Frontend build
on: [ push ]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest ]
        node-version: [ 12.x, 14.x, 15.x ]
    env:
      working-directory: ./frontend
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get cypress version from yarn.lock
        if: ${{ matrix.os == 'windows-latest' }}
        id: cypress-version-frontend
        run: echo "::set-output name=version::$(node .\build\getCypressVersion)"
      - name: Setup cypress cache
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/cache@v2
        with:
          path: ~/AppData/Local/Cypress/Cache/${{ steps.cypress-version-frontend.outputs.version }}
          key: cypress-cache-windows-${{ matrix.node-version }}-${{ steps.cypress-version-frontend.outputs.version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ matrix.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - run: npm install -g yarn
      - run: yarn install --frozen-lockfile --prefer-offline --network-timeout 1000000
        working-directory: ${{ env.working-directory }}
      - run: yarn run build
        working-directory: ${{ env.working-directory }}
