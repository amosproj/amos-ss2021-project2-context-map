name: cache-ubuntu
desciption: 'Simplifies the manual caching of the backend'
inputs:
  frontend:
    description: 'Cache the frontend?'
    required: false
    default: false
  backend:
    description: 'Cache the backend?'
    required: false
    default: false
runs:
  using: "composite"
  steps:
    # Cypress
    - name: Get cypress version from yarn.lock
      if: ${{ inputs.frontend }}
      id: cypress-version-frontend
      run: echo "::set-output name=version::$(node .\build\getCypressVersion)"

    - name: Setup cypress cache (windows)
      id: cypress-cache-windows
      if: ${{ inputs.frontend && matrix.os == 'windows-latest' }}
      uses: actions/cache@v2
      with:
        path: ~/AppData/Local/Cypress/Cache/${{ steps.cypress-version-frontend.outputs.version }}
        key: cypress-cache-windows-${{ matrix.node-version }}-${{ steps.cypress-version-frontend.outputs.version }}
    - name: Setup cypress cache (ubuntu)
      if: ${{ inputs.frontend && matrix.os == 'ubuntu-latest' }}
      id: cypress-cache-ubuntu
      uses: actions/cache@v2
      with:
        path: ~/.cache/Cypress/${{ steps.cypress-version-frontend.outputs.version }}
        key: cypress-cache-ubuntu-${{ matrix.node-version }}-${{ steps.cypress-version-frontend.outputs.version }}

    # FE node_modules
    - name: Cache node_modules (frontend)
      if: ${{ inputs.frontend && (steps.cypress-cache-ubuntu.outputs.cache-hit == 'true' || steps.cypress-cache-windows.outputs.cache-hit == 'true') }}
      uses: actions/cache@v2
      with:
        path: frontend/node_modules
        key: ${{ matrix.os }}-${{ matrix.node-version }}-yarn-frontend-${{ hashFiles('frontend/yarn.lock') }}

    # BE node_modules
    - name: Cache node_modules (backend)
      if: ${{ inputs.backend }}
      uses: actions/cache@v2
      with:
        path: backend/node_modules
        key: ${{ matrix.os }}-${{ matrix.node-version }}-yarn-backend-${{ hashFiles('frontend/yarn.lock') }}
